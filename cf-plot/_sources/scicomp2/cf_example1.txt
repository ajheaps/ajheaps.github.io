.. currentmodule:: cf
.. default-role:: obj


Example 1 - read in a multi-field netCDF file, display attributes and write out a single field
==============================================================================================

The cf package allows a data array and its associated metadata to be
contained and manipulated as a single entity called a *field*, which
is stored in a `cf.Field` object.

Much of the basic field manipulation syntax can be seen in this simple
read-modify-write example which:

    * Reads a multi-field from a netCDF file on disk and find out information about it.

    * Select a single field.

    * Writes this out to another file on disk.


The example may be reproduced by downloading the :download:`sample
netCDF file (data1.nc) <data/data1.nc>` (taking care not to overwrite an
existing file with that name) 

**1.** Import the cf and cf-plot packages.

>>> import cf, cfplot as cfp

**2.** Read a netCDF file from disk and view its contents.

>>> f=cf.read('data1.nc')
>>> type(f)
<class 'cf.field.FieldList'>

>>> f
[<CF Field: long_name:Potential vorticity(time(1), pressure(23), latitude(160), longitude(320)) K m**2 kg**-1 s**-1>,
 <CF Field: long_name:Ozone mass mixing ratio(time(1), pressure(23), latitude(160), longitude(320)) kg kg**-1>,
 <CF Field: air_temperature(time(1), pressure(23), latitude(160), longitude(320)) K>,
 <CF Field: atmosphere_relative_vorticity(time(1), pressure(23), latitude(160), longitude(320)) m**2 s**-1>,
 <CF Field: atmosphere_relative_vorticity(time(1), pressure(23), latitude(160), longitude(320)) s**-1>,
 <CF Field: divergence_of_wind(time(1), pressure(23), latitude(160), longitude(320)) s**-1>,
 <CF Field: divergence_of_wind(time(1), pressure(23), latitude(160), longitude(320)) m**2 s**-1>,
 <CF Field: eastward_wind(time(1), pressure(23), latitude(160), longitude(320)) m s**-1>,
 <CF Field: geopotential(time(1), pressure(23), latitude(160), longitude(320)) m**2 s**-2>,
 <CF Field: northward_wind(time(1), pressure(23), latitude(160), longitude(320)) m s**-1>,
 <CF Field: relative_humidity(time(1), pressure(23), latitude(160), longitude(320)) %>,
 <CF Field: specific_humidity(time(1), pressure(23), latitude(160), longitude(320)) kg kg**-1>,
 <CF Field: vertical_air_velocity_expressed_as_tendency_of_pressure(time(1), pressure(23), latitude(160), longitude(320)) Pa s**-1>]

**3.** Select a field and print a summary of its contents.

>>> temp=f[2]
or 
>>> temp=f.select('air_temperature')

>>> temp
<CF Field: air_temperature(time(1), pressure(23), latitude(160), longitude(320)) K>

>>> print temp
air_temperature field summary
-----------------------------
Data           : air_temperature(time(1), pressure(23), latitude(160), longitude(320)) K
Axes           : time(1) = [1964-01-21 00:00:00]
               : pressure(23) = [1000.0, ..., 1.0] mbar
               : latitude(160) = [89.1415176392, ..., -89.1415176392] degrees_north
               : longitude(320) = [0.0, ..., 358.875] degrees_east


**4.** Display attributes.

>>> temp.properties
{'_FillValue': 2e+20, 'name': 'PV', 'title': 'Potential vorticity', 'valid_min': -0.0081740506, 
'Conventions': 'CF-1.5', 'long_name': 'Potential vorticity', 'standard_name': 'potential_vorticity', 
'source': 'GRIB data', 'time': '00:00', 'date': '21/01/64', 'missing_value': 2e+20, 'valid_max': 0.018913519,
'history': 'Sun Sep 16 11:26:16 BST 2012 - CONVSH V1.92 16-February-2006'}


>>> temp.standard_name
'potential_vorticity'

>>> temp.Units
<CF Units: K m**2 kg**-1 s**-1>


**5.** Write out the data.

>>> cf.write(temp, 'newfile.nc')






